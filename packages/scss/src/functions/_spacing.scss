@use "sass:map";
@use "sass:meta";
@use "sass:list";
@use "../tokens/spacing" as spacing-tokens;
@use "../css-variables/config" as css-vars;

// ============================================================================
// Spacing 工具函数
// ============================================================================

/// 获取间距值 (类似 Tailwind 的统一计算方式)
/// @param {String|Number} $size - 间距大小，支持预设值、任意数值或断点别名
/// @return {Length} 计算后的间距值
/// @example scss - 使用示例
///   .button {
///     padding: spacing(0);       // 0
///     border: spacing(px);       // 1px
///     margin: spacing(4);        // calc(var(--cdt-spacing) * 4)
///     width: spacing(15);        // calc(var(--cdt-spacing) * 15) - 任意数值
///     max-width: spacing("md");  // var(--cdt-breakpoint-md) - 断点别名
///     min-width: spacing("sm");  // var(--cdt-breakpoint-sm) - 断点别名
///   }
@function spacing($size) {
  // 特殊值直接返回
  @if $size == 0 {
    @return 0;
  } @else if $size == px {
    @return 1px;
  }

  // 断点别名支持
  @if $size == "sm" {
    @return var(--#{css-vars.$css-var-prefix}breakpoint-sm);
  } @else if $size == "md" {
    @return var(--#{css-vars.$css-var-prefix}breakpoint-md);
  } @else if $size == "lg" {
    @return var(--#{css-vars.$css-var-prefix}breakpoint-lg);
  } @else if $size == "xl" {
    @return var(--#{css-vars.$css-var-prefix}breakpoint-xl);
  } @else if $size == "2xl" {
    @return var(--#{css-vars.$css-var-prefix}breakpoint-2xl);
  }

  // 获取倍数值
  $multiplier: null;

  // 检查是否为预设值
  @if map.has-key(spacing-tokens.$scale, $size) {
    $multiplier: map.get(spacing-tokens.$scale, $size);
  } @else if meta.type-of($size) == number {
    // 支持任意数值
    $multiplier: $size;
  } @else {
    @error "spacing() 参数错误: '#{$size}' 不是有效的间距值。\A可用预设值: #{map.keys(spacing-tokens.$scale)}\A断点别名: sm, md, lg, xl, 2xl\A示例: spacing(4), spacing(15), spacing(\"md\")";
  }

  // 统一返回 calc 计算结果 - 使用带前缀的变量
  @return calc(var(--#{css-vars.$css-var-prefix}spacing) * #{$multiplier});
}

/// 批量获取间距值（用于padding, margin简写）
/// @param {List} $sizes - 间距大小列表，支持1-4个值
/// @return {List} 计算后的间距值列表
/// @example scss - 使用示例
///   .card {
///     padding: spacing-list(4, 6);     // calc(var(--spacing) * 4) calc(var(--spacing) * 6)
///     margin: spacing-list(0, 4, px);  // 0 calc(var(--spacing) * 4) 1px
///   }
@function spacing-list($sizes...) {
  $result: ();

  @each $size in $sizes {
    $result: list.append($result, spacing($size));
  }

  @return $result;
}

/// 检查是否为有效的间距值
/// @param {String|Number} $size - 间距大小
/// @return {Boolean} 是否为有效值
/// @example scss - 使用示例
///   @if spacing-exists(4) { } // true - 预设值
///   @if spacing-exists(15) { } // true - 任意数值
///   @if spacing-exists("md") { } // true - 断点别名
///   @if spacing-exists("abc") { } // false - 无效值
@function spacing-exists($size) {
  // 断点别名检查
  @if $size == "sm" or $size == "md" or $size == "lg" or $size == "xl" or $size == "2xl" {
    @return true;
  }

  // 预设值检查
  @if map.has-key(spacing-tokens.$scale, $size) {
    @return true;
  }

  // 数值检查
  @if meta.type-of($size) == number {
    @return true;
  }

  @return false;
}

/// 获取所有预设的间距大小
/// @return {List} 所有预设间距大小的key列表
@function spacing-keys() {
  @return map.keys(spacing-tokens.$scale);
}

/// 获取间距值对应的像素值（用于文档和调试）
/// @param {String|Number} $size - 间距大小
/// @param {Number} $base-px - 基础单位的像素值，默认为4px
/// @return {String} 像素值描述
/// @example scss - 使用示例
///   @debug spacing-to-px(0);      // "0px"
///   @debug spacing-to-px(px);     // "1px"
///   @debug spacing-to-px(4);      // "16px"
///   @debug spacing-to-px(15);     // "60px" - 任意数值
///   @debug spacing-to-px("md");   // "768px (breakpoint)" - 断点别名
///   @debug spacing-to-px("lg");   // "1024px (breakpoint)" - 断点别名
@function spacing-to-px($size, $base-px: 4) {
  @if $size == px {
    @return "1px";
  } @else if $size == 0 {
    @return "0px";
  } @else if $size == "sm" {
    @return "640px( breakpoint)";
  } @else if $size == "md" {
    @return "768px( breakpoint)";
  } @else if $size == "lg" {
    @return "1024px( breakpoint)";
  } @else if $size == "xl" {
    @return "1280px( breakpoint)";
  } @else if $size == "2xl" {
    @return "1536px( breakpoint)";
  } @else if map.has-key(spacing-tokens.$scale, $size) {
    $multiplier: map.get(spacing-tokens.$scale, $size);
    @return "#{$multiplier * $base-px}px";
  } @else if meta.type-of($size) == number {
    @return "#{$size * $base-px}px";
  }

  @return "未知";
}
