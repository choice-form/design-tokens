@use "sass:map";
@use "sass:meta";
@use "../tokens/breakpoints" as breakpoint-tokens;
@use "../css-variables/config" as css-vars;

// ============================================================================
// 断点工具函数 - 与 linaria breakpoints.ts 保持功能一致
// ============================================================================

/// 解析断点别名
/// @param {String} $breakpoint - 断点名称或别名
/// @return {String} 解析后的断点名称
/// @example scss - 使用示例
///   $resolved: resolve-breakpoint-alias("tablet"); // "md"
///   $resolved: resolve-breakpoint-alias("lg");     // "lg"
@function resolve-breakpoint-alias($breakpoint) {
  @if map.has-key(breakpoint-tokens.$breakpoint-aliases, $breakpoint) {
    @return map.get(breakpoint-tokens.$breakpoint-aliases, $breakpoint);
  }

  @if map.has-key(breakpoint-tokens.$breakpoints, $breakpoint) {
    @return $breakpoint;
  }

  @error "未知的断点: '#{$breakpoint}'。\A可用断点: #{map.keys(breakpoint-tokens.$breakpoints)}\A可用别名: #{map.keys(breakpoint-tokens.$breakpoint-aliases)}";
}

/// 获取断点的像素值
/// @param {String} $breakpoint - 断点名称或别名
/// @return {Number} 像素值数字
/// @example scss - 使用示例
///   $value: get-breakpoint-value("md");     // 768
///   $value: get-breakpoint-value("tablet"); // 768
@function get-breakpoint-value($breakpoint) {
  $resolved: resolve-breakpoint-alias($breakpoint);
  @return map.get(breakpoint-tokens.$breakpoints, $resolved);
}

/// 获取断点的 rem 值
/// @param {String} $breakpoint - 断点名称或别名
/// @return {String} rem 值字符串
/// @example scss - 使用示例
///   $rem-value: get-breakpoint-value-in-rem("md"); // "48rem"
@function get-breakpoint-value-in-rem($breakpoint) {
  $px-value: get-breakpoint-value($breakpoint);
  @return #{$px-value / 16}rem;
}

/// 检查断点是否存在
/// @param {String} $breakpoint - 断点名称
/// @return {Boolean} 是否存在
/// @example scss - 使用示例
///   @if breakpoint-exists("md") { } // true
///   @if breakpoint-exists("xyz") { } // false
@function breakpoint-exists($breakpoint) {
  @return map.has-key(breakpoint-tokens.$breakpoints, $breakpoint) or
    map.has-key(breakpoint-tokens.$breakpoint-aliases, $breakpoint);
}

/// 获取断点的 CSS 变量引用
/// @param {String} $breakpoint - 断点名称或别名
/// @return {String} CSS 变量引用
/// @example scss - 使用示例
///   $var: breakpoint("md");     // "var(--cdt-breakpoint-md)"
///   $var: breakpoint("tablet"); // "var(--cdt-breakpoint-md)"
@function breakpoint($breakpoint) {
  @if not breakpoint-exists($breakpoint) {
    @error "断点 '#{$breakpoint}' 不存在。\A可用断点: #{map.keys(breakpoint-tokens.$breakpoints)}\A可用别名: #{map.keys(breakpoint-tokens.$breakpoint-aliases)}";
  }

  $resolved: resolve-breakpoint-alias($breakpoint);
  @return var(--#{css-vars.$css-var-prefix}breakpoint-#{$resolved});
}

/// 获取容器最大宽度的 CSS 变量引用
/// @param {String} $size - 容器大小
/// @return {String} CSS 变量引用或值
/// @example scss - 使用示例
///   $container: container-max-width("lg"); // "var(--cdt-container-lg)"
///   $container: container-max-width("xs"); // "none"
@function container-max-width($size) {
  @if not map.has-key(breakpoint-tokens.$container-max-widths, $size) {
    @error "容器大小 '#{$size}' 不存在。可用大小: #{map.keys(breakpoint-tokens.$container-max-widths)}";
  }

  $value: map.get(breakpoint-tokens.$container-max-widths, $size);
  @if $value == none {
    @return none;
  }

  @return var(--#{css-vars.$css-var-prefix}container-#{$size});
}

/// 获取所有断点名称
/// @return {List} 断点名称列表
@function get-breakpoint-keys() {
  @return map.keys(breakpoint-tokens.$breakpoints);
}

/// 获取所有断点别名
/// @return {List} 断点别名列表
@function get-breakpoint-aliases() {
  @return map.keys(breakpoint-tokens.$breakpoint-aliases);
}
